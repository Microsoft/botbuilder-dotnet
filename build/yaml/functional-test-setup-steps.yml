steps:
- task: DotNetCoreCLI@2
  displayName: 'Create PublishedBot.zip for deploy to Azure'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '$(System.DefaultWorkingDirectory)\tests\Microsoft.Bot.Builder.TestBot\Microsoft.Bot.Builder.TestBot.csproj'
    arguments: '--output $(System.DefaultWorkingDirectory)\tests\Microsoft.Bot.Builder.TestBot\PublishedBot --framework netcoreapp3.0'
    modifyOutputPath: false

- task: CopyFiles@2
  displayName: 'Copy root Directory.Build.props to staging'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: Directory.Build.props
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: CopyFiles@2
  displayName: 'Copy FunctionalTests to staging'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)\FunctionalTests'
    Contents: '**\*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\FunctionalTests'

- task: CopyFiles@2
  displayName: 'Copy libraries to staging'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)\libraries'
    Contents: '**\*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\libraries'

- task: CopyFiles@2
  displayName: 'Copy tests\integration to staging'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)\tests\integration'
    Contents: '**\*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\tests\integration'

- task: CopyFiles@2
  displayName: 'Copy PublishedBot.zip to staging'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)\tests\Microsoft.Bot.Builder.TestBot\PublishedBot'
    Contents: '*.zip'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true
  enabled: false

- task: CopyFiles@2
  displayName: 'Copy test bot to staging'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)\tests\Microsoft.Bot.Builder.TestBot'
    Contents: '**\*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)\tests\Microsoft.Bot.Builder.TestBot'

- task: CopyFiles@2
  displayName: 'Copy CodeCoverage.runsettings and PublishToCoveralls.ps1 to staging'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
     CodeCoverage.runsettings
     build\PublishToCoveralls.ps1
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true

- task: PublishBuildArtifacts@1
  displayName: 'Push staging to Artifacts drop'

- script: |
   cd ..
   dir *.* /s
  displayName: 'Dir workspace'
  enabled: true
