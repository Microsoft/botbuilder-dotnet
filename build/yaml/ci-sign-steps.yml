steps:
- task: CopyFiles@2
  displayName: 'Copy packages to Signing'
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'
    Contents: |
     outputpackages\*.nupkg
     !outputpackages\*.symbols.nupkg
    TargetFolder: '$(build.artifactstagingdirectory)\Signing'
    flattenFolders: true

- task: PowerShell@2
  displayName: 'Unpack .nuget packages'
  inputs:
    targetType: filePath
    filePath: ./build/ExtractCompressNuGet.ps1
    arguments: '$(Build.ArtifactStagingDirectory)\Signing  -Extract'

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'ESRP Signing - strong name (CP-233863-SN)'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing Connection 2019b'
    FolderPath: '$(build.artifactstagingdirectory)\Signing'
    signConfigType: inlineSignParams
    inlineOperation: |
     [
         {
             "keyCode": "CP-233863-SN",
             "operationSetCode": "StrongNameSign",
             "parameters": [],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-233863-SN",
             "operationSetCode": "StrongNameVerify",
             "parameters": [],
             "toolName": "sign",
             "toolVersion": "1.0"
         }
     ]
     
    SessionTimeout: 20

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'ESRP Signing - authenticode (CP-230012)'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing Connection 2019b'
    FolderPath: '$(build.artifactstagingdirectory)\Signing'
    signConfigType: inlineSignParams
    inlineOperation: |
     [
         {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolSign",
             "parameters": [
             {
                 "parameterName": "OpusName",
                 "parameterValue": "Microsoft"
             },
             {
                 "parameterName": "OpusInfo",
                 "parameterValue": "http://www.microsoft.com"
             },
             {
                 "parameterName": "PageHash",
                 "parameterValue": "/NPH"
             },
             {
                 "parameterName": "TimeStamp",
                 "parameterValue": "/t \"http://ts4096.gtm.microsoft.com/TSS/AuthenticodeTS\""
             }
             ],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-230012",
             "operationSetCode": "SigntoolVerify",
             "parameters": [ ],
             "toolName": "sign",
             "toolVersion": "1.0"
         }
     ]
    SessionTimeout: 20

- script: |
   cd ..
   dir *.* /s
  displayName: 'Dir workspace copy'

- task: PowerShell@2
  displayName: 'Repack .nuget packages'
  inputs:
    targetType: filePath
    filePath: ./build/ExtractCompressNuGet.ps1
    arguments: '$(Build.ArtifactStagingDirectory)\Signing -Compress'

- task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
  displayName: 'ESRP Signing - .nupkg (CP-401405)'
  inputs:
    ConnectedServiceName: 'ESRP Code Signing Connection 2019b'
    FolderPath: '$(build.artifactstagingdirectory)\Signing'
    Pattern: '*.nupkg'
    signConfigType: inlineSignParams
    inlineOperation: |
     [
         {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetSign",
             "parameters": [],
             "toolName": "sign",
             "toolVersion": "1.0"
         },
         {
             "keyCode": "CP-401405",
             "operationSetCode": "NuGetVerify",
             "parameters": [],
             "toolName": "sign",
             "toolVersion": "1.0"
         }
     ]
    SessionTimeout: 20

- task: CopyFiles@2
  displayName: 'Copy .nupkg files to publish'
  inputs:
    SourceFolder: '$(Build.ArtifactStagingDirectory)\Signing'
    Contents: |
     *.nupkg
     !*.symbols.nupkg
    TargetFolder: '$(Build.ArtifactStagingDirectory)\publish'

- task: PublishBuildArtifacts@1
  displayName: 'Publish .nupkgs to Build Artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)\publish'

- powershell: |
   [string[]]$outvar = (Get-ChildItem *.nupkg -Path $(Build.ArtifactStagingDirectory)\publish ).Name;
   [int] $j = $outvar.Length;
   $PackagesDescription = "$j packages";
   Write-Host $PackagesDescription
   "##vso[task.setvariable variable=PackagesDescription;]$PackagesDescription";
   
   for ($i = 0; $i -lt $outvar.Length; $i++ ) {
       $p = $outvar[$i];
       "##vso[task.setvariable variable=pkg$i;]$p";
       Write-Host $p
   }
   for ($i = $outvar.Length; $i -lt 15; $i++ ) {
       "##vso[task.setvariable variable=pkg$i;]";
   }
  displayName: 'Get package names'

- task: colinsalmcorner.colinsalmcorner-buildtasks.tag-build-task.tagBuildOrRelease@0
  displayName: 'Tag Build with package names'
  inputs:
    tags: |
     $(PACKAGESDESCRIPTION)
     $(PKG0)
     $(PKG1)
     $(PKG2)
     $(PKG3)
     $(PKG4)
     $(PKG5)
     $(PKG6)
     $(PKG7)
     $(PKG8)
     $(PKG9)
     $(PKG10)
     $(PKG11)
     $(PKG12)
     $(PKG13)
     $(PKG14)

- script: |
   cd ..
   dir *.* /s
  displayName: 'Dir workspace'
