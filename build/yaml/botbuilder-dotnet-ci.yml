#
# YAML build definition to replace BotBuilder-DotNet-master-CI-PR
#
name: TestBuild-$(Build.BuildId)
variables:
  ApiCompatVersion: 4.6.3
  BotBuilderDll: Microsoft.Bot.Builder.AI.Luis,Microsoft.Bot.Builder.AI.QnA,Microsoft.Bot.Builder.ApplicationInsights,Microsoft.Bot.Builder.Azure,Microsoft.Bot.Builder.Dialogs,Microsoft.Bot.Builder.Integration.ApplicationInsights.Core,Microsoft.Bot.Builder.Integration.AspNet.Core,Microsoft.Bot.Builder.TemplateManager,Microsoft.Bot.Builder.Testing,Microsoft.Bot.Builder,Microsoft.Bot.Configuration,Microsoft.Bot.Connector,Microsoft.Bot.Schema,Microsoft.Bot.Streaming
  BuildConfiguration: Debug-Windows
  BuildPlatform: any cpu
  CoverallsToken: define this in Azure
  GitHubCommentApiKey: define this in Azure
  IsBuildServer: true
  Parameters.solution: Microsoft.Bot.Builder.sln
  PreviewPackageVersion: 4.6.0-preview-$(Build.BuildNumber)
  ReleasePackageVersion: 4.6.0-preview-$(Build.BuildNumber)
pool:
  name: Hosted Windows 2019 with VS2019
  demands:
  - msbuild
  - visualstudio

#Multi-configuration and multi-agent job options are not exported to YAML. Configure these options using documentation guidance: https://docs.microsoft.com/vsts/pipelines/process/phases
stages:
- stage: Build
  jobs:
  - job: Debug_Windows_Configuration
    variables:
      BuildConfiguration: Debug-Windows
    steps:
    #- script: echo Executing this 1
    - template: ci-build-steps.yml
  - job: Release_Windows_Configuration
    variables:
      BuildConfiguration: Release-Windows
    steps:
    #- script: echo Executing this 2
    - template: ci-build-steps.yml

- stage: API_Compatibility_Validation
  dependsOn: Build
  jobs:
  - job: generate_multijob_vars
    steps:
    - powershell: |
       $multijobs = '{';

       $env:BotBuilderDll.Split(",") | ForEach {
           $library = $_.Trim()
           Write-Host $library

           $threadName = $library.Split(".")[-1];
           $multijobs += "'" + $threadName + "':{'BotBuilderDll':'" + $library + "'}, ";
         }
       $multijobs = $multijobs.TrimEnd(' ').TrimEnd(',') + "}";
       $multijobs

       "##vso[task.setVariable variable=MULTIJOBS;isOutput=true]$multijobs"
      name: generate_vars
    - script: echo $(generate_vars.MULTIJOBS)

  - job: check_api_for
    dependsOn: generate_multijob_vars
    timeoutInMinutes: 10
    strategy:
      maxParallel: 10
      matrix: $[ dependencies.generate_multijob_vars.outputs['generate_vars.MULTIJOBS'] ]
    steps:
    - script: echo $(BotBuilderDll)
    - template: ci-api-validation-steps.yml

- stage: Post_Results_to_GitHub
  dependsOn: API_Compatibility_Validation
  jobs:
  - job: Post_to_GitHub
    variables:
      BuildConfiguration: Release-Windows
    steps:
    #- script: echo Executing this 3
    - template: ci-post-to-github-steps.yml
