//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from LGFileLexer.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

#pragma warning disable 3021
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class LGFileLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		NEWLINE=1, OPTION=2, COMMENT=3, IMPORT=4, TEMPLATE_NAME_LINE=5, INLINE_MULTILINE=6, 
		MULTILINE_PREFIX=7, TEMPLATE_BODY=8, INVALID_LINE=9, MULTILINE_SUFFIX=10, 
		ESCAPE_CHARACTER=11, MULTILINE_TEXT=12;
	public const int
		MULTILINE_MODE=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "MULTILINE_MODE"
	};

	public static readonly string[] ruleNames = {
		"WHITESPACE", "LETTER", "NUMBER", "IDENTIFIER", "NEWLINE", "OPTION", "COMMENT", 
		"IMPORT", "TEMPLATE_NAME_LINE", "INLINE_MULTILINE", "MULTILINE_PREFIX", 
		"TEMPLATE_BODY", "INVALID_LINE", "MULTILINE_SUFFIX", "ESCAPE_CHARACTER", 
		"MULTILINE_TEXT"
	};


	  bool startTemplate = false;


	public LGFileLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public LGFileLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, null, null, null, null, "'```'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "NEWLINE", "OPTION", "COMMENT", "IMPORT", "TEMPLATE_NAME_LINE", 
		"INLINE_MULTILINE", "MULTILINE_PREFIX", "TEMPLATE_BODY", "INVALID_LINE", 
		"MULTILINE_SUFFIX", "ESCAPE_CHARACTER", "MULTILINE_TEXT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "LGFileLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static LGFileLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 8 : TEMPLATE_NAME_LINE_action(_localctx, actionIndex); break;
		}
	}
	private void TEMPLATE_NAME_LINE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:  startTemplate = true;  break;
		}
	}
	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 5 : return OPTION_sempred(_localctx, predIndex);
		case 6 : return COMMENT_sempred(_localctx, predIndex);
		case 7 : return IMPORT_sempred(_localctx, predIndex);
		case 8 : return TEMPLATE_NAME_LINE_sempred(_localctx, predIndex);
		case 9 : return INLINE_MULTILINE_sempred(_localctx, predIndex);
		case 10 : return MULTILINE_PREFIX_sempred(_localctx, predIndex);
		case 11 : return TEMPLATE_BODY_sempred(_localctx, predIndex);
		case 12 : return INVALID_LINE_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool OPTION_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return  !startTemplate ;
		}
		return true;
	}
	private bool COMMENT_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 1: return  !startTemplate ;
		}
		return true;
	}
	private bool IMPORT_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 2: return  !startTemplate ;
		}
		return true;
	}
	private bool TEMPLATE_NAME_LINE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 3: return  TokenStartColumn == 0;
		}
		return true;
	}
	private bool INLINE_MULTILINE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 4: return  startTemplate && TokenStartColumn == 0 ;
		}
		return true;
	}
	private bool MULTILINE_PREFIX_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 5: return  startTemplate && TokenStartColumn == 0 ;
		}
		return true;
	}
	private bool TEMPLATE_BODY_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 6: return  startTemplate ;
		}
		return true;
	}
	private bool INVALID_LINE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 7: return  !startTemplate ;
		}
		return true;
	}

	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\xE', '\xFC', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x5', '\x5', '-', '\n', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\a', '\x5', '\x32', '\n', '\x5', '\f', '\x5', '\xE', '\x5', '\x35', 
		'\v', '\x5', '\x3', '\x6', '\x5', '\x6', '\x38', '\n', '\x6', '\x3', '\x6', 
		'\x3', '\x6', '\x3', '\a', '\a', '\a', '=', '\n', '\a', '\f', '\a', '\xE', 
		'\a', '@', '\v', '\a', '\x3', '\a', '\x3', '\a', '\a', '\a', '\x44', '\n', 
		'\a', '\f', '\a', '\xE', '\a', 'G', '\v', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x6', '\a', 'M', '\n', '\a', '\r', '\a', '\xE', 
		'\a', 'N', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\a', '\b', 'T', '\n', 
		'\b', '\f', '\b', '\xE', '\b', 'W', '\v', '\b', '\x3', '\b', '\x3', '\b', 
		'\a', '\b', '[', '\n', '\b', '\f', '\b', '\xE', '\b', '^', '\v', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\a', '\t', '\x63', '\n', '\t', 
		'\f', '\t', '\xE', '\t', '\x66', '\v', '\t', '\x3', '\t', '\x3', '\t', 
		'\a', '\t', 'j', '\n', '\t', '\f', '\t', '\xE', '\t', 'm', '\v', '\t', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\a', '\t', 'r', '\n', '\t', '\f', 
		'\t', '\xE', '\t', 'u', '\v', '\t', '\x3', '\t', '\x3', '\t', '\a', '\t', 
		'y', '\n', '\t', '\f', '\t', '\xE', '\t', '|', '\v', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\t', '\x3', '\t', '\a', '\t', '\x82', '\n', '\t', 
		'\f', '\t', '\xE', '\t', '\x85', '\v', '\t', '\x3', '\t', '\x3', '\t', 
		'\a', '\t', '\x89', '\n', '\t', '\f', '\t', '\xE', '\t', '\x8C', '\v', 
		'\t', '\x5', '\t', '\x8E', '\n', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\n', '\a', '\n', '\x93', '\n', '\n', '\f', '\n', '\xE', '\n', '\x96', 
		'\v', '\n', '\x3', '\n', '\x3', '\n', '\a', '\n', '\x9A', '\n', '\n', 
		'\f', '\n', '\xE', '\n', '\x9D', '\v', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\v', '\a', '\v', '\xA3', '\n', '\v', '\f', '\v', 
		'\xE', '\v', '\xA6', '\v', '\v', '\x3', '\v', '\x3', '\v', '\a', '\v', 
		'\xAA', '\n', '\v', '\f', '\v', '\xE', '\v', '\xAD', '\v', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\a', '\v', 
		'\xB4', '\n', '\v', '\f', '\v', '\xE', '\v', '\xB7', '\v', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\a', '\v', 
		'\xBE', '\n', '\v', '\f', '\v', '\xE', '\v', '\xC1', '\v', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\f', '\a', '\f', '\xC6', '\n', '\f', '\f', 
		'\f', '\xE', '\f', '\xC9', '\v', '\f', '\x3', '\f', '\x3', '\f', '\a', 
		'\f', '\xCD', '\n', '\f', '\f', '\f', '\xE', '\f', '\xD0', '\v', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\a', 
		'\f', '\xD7', '\n', '\f', '\f', '\f', '\xE', '\f', '\xDA', '\v', '\f', 
		'\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\r', '\x6', 
		'\r', '\xE1', '\n', '\r', '\r', '\r', '\xE', '\r', '\xE2', '\x3', '\r', 
		'\x3', '\r', '\x3', '\xE', '\x6', '\xE', '\xE8', '\n', '\xE', '\r', '\xE', 
		'\xE', '\xE', '\xE9', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', 
		'\x10', '\x3', '\x10', '\x5', '\x10', '\xF6', '\n', '\x10', '\x3', '\x11', 
		'\x6', '\x11', '\xF9', '\n', '\x11', '\r', '\x11', '\xE', '\x11', '\xFA', 
		'\x5', 'k', 's', '\xFA', '\x2', '\x12', '\x4', '\x2', '\x6', '\x2', '\b', 
		'\x2', '\n', '\x2', '\f', '\x3', '\xE', '\x4', '\x10', '\x5', '\x12', 
		'\x6', '\x14', '\a', '\x16', '\b', '\x18', '\t', '\x1A', '\n', '\x1C', 
		'\v', '\x1E', '\f', ' ', '\r', '\"', '\xE', '\x4', '\x2', '\x3', '\a', 
		'\x6', '\x2', '\v', '\v', '\"', '\"', '\xA2', '\xA2', '\xFF01', '\xFF01', 
		'\x4', '\x2', '\x43', '\\', '\x63', '|', '\x4', '\x2', '\f', '\f', '\xF', 
		'\xF', '\x6', '\x2', '\f', '\f', '\xF', '\xF', ']', ']', '_', '_', '\x5', 
		'\x2', '\f', '\f', '\xF', '\xF', '*', '+', '\x2', '\x114', '\x2', '\f', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x10', '\x3', '\x2', '\x2', '\x2', '\x2', '\x12', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x14', '\x3', '\x2', '\x2', '\x2', '\x2', '\x16', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', '\x3', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x3', ' ', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\"', '\x3', '\x2', '\x2', '\x2', '\x4', '$', 
		'\x3', '\x2', '\x2', '\x2', '\x6', '&', '\x3', '\x2', '\x2', '\x2', '\b', 
		'(', '\x3', '\x2', '\x2', '\x2', '\n', ',', '\x3', '\x2', '\x2', '\x2', 
		'\f', '\x37', '\x3', '\x2', '\x2', '\x2', '\xE', '>', '\x3', '\x2', '\x2', 
		'\x2', '\x10', 'U', '\x3', '\x2', '\x2', '\x2', '\x12', '\x64', '\x3', 
		'\x2', '\x2', '\x2', '\x14', '\x94', '\x3', '\x2', '\x2', '\x2', '\x16', 
		'\xA4', '\x3', '\x2', '\x2', '\x2', '\x18', '\xC7', '\x3', '\x2', '\x2', 
		'\x2', '\x1A', '\xE0', '\x3', '\x2', '\x2', '\x2', '\x1C', '\xE7', '\x3', 
		'\x2', '\x2', '\x2', '\x1E', '\xED', '\x3', '\x2', '\x2', '\x2', ' ', 
		'\xF3', '\x3', '\x2', '\x2', '\x2', '\"', '\xF8', '\x3', '\x2', '\x2', 
		'\x2', '$', '%', '\t', '\x2', '\x2', '\x2', '%', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '&', '\'', '\t', '\x3', '\x2', '\x2', '\'', '\a', '\x3', 
		'\x2', '\x2', '\x2', '(', ')', '\x4', '\x32', ';', '\x2', ')', '\t', '\x3', 
		'\x2', '\x2', '\x2', '*', '-', '\x5', '\x6', '\x3', '\x2', '+', '-', '\a', 
		'\x61', '\x2', '\x2', ',', '*', '\x3', '\x2', '\x2', '\x2', ',', '+', 
		'\x3', '\x2', '\x2', '\x2', '-', '\x33', '\x3', '\x2', '\x2', '\x2', '.', 
		'\x32', '\x5', '\x6', '\x3', '\x2', '/', '\x32', '\x5', '\b', '\x4', '\x2', 
		'\x30', '\x32', '\a', '\x61', '\x2', '\x2', '\x31', '.', '\x3', '\x2', 
		'\x2', '\x2', '\x31', '/', '\x3', '\x2', '\x2', '\x2', '\x31', '\x30', 
		'\x3', '\x2', '\x2', '\x2', '\x32', '\x35', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\x31', '\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\x3', '\x2', 
		'\x2', '\x2', '\x34', '\v', '\x3', '\x2', '\x2', '\x2', '\x35', '\x33', 
		'\x3', '\x2', '\x2', '\x2', '\x36', '\x38', '\a', '\xF', '\x2', '\x2', 
		'\x37', '\x36', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\x3', '\x2', 
		'\x2', '\x2', '\x38', '\x39', '\x3', '\x2', '\x2', '\x2', '\x39', ':', 
		'\a', '\f', '\x2', '\x2', ':', '\r', '\x3', '\x2', '\x2', '\x2', ';', 
		'=', '\x5', '\x4', '\x2', '\x2', '<', ';', '\x3', '\x2', '\x2', '\x2', 
		'=', '@', '\x3', '\x2', '\x2', '\x2', '>', '<', '\x3', '\x2', '\x2', '\x2', 
		'>', '?', '\x3', '\x2', '\x2', '\x2', '?', '\x41', '\x3', '\x2', '\x2', 
		'\x2', '@', '>', '\x3', '\x2', '\x2', '\x2', '\x41', '\x45', '\a', '@', 
		'\x2', '\x2', '\x42', '\x44', '\x5', '\x4', '\x2', '\x2', '\x43', '\x42', 
		'\x3', '\x2', '\x2', '\x2', '\x44', 'G', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'\x43', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\x3', '\x2', '\x2', 
		'\x2', '\x46', 'H', '\x3', '\x2', '\x2', '\x2', 'G', '\x45', '\x3', '\x2', 
		'\x2', '\x2', 'H', 'I', '\a', '#', '\x2', '\x2', 'I', 'J', '\a', '%', 
		'\x2', '\x2', 'J', 'L', '\x3', '\x2', '\x2', '\x2', 'K', 'M', '\n', '\x4', 
		'\x2', '\x2', 'L', 'K', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', 
		'\x2', '\x2', 'N', 'L', '\x3', '\x2', '\x2', '\x2', 'N', 'O', '\x3', '\x2', 
		'\x2', '\x2', 'O', 'P', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\x6', '\a', 
		'\x2', '\x2', 'Q', '\xF', '\x3', '\x2', '\x2', '\x2', 'R', 'T', '\x5', 
		'\x4', '\x2', '\x2', 'S', 'R', '\x3', '\x2', '\x2', '\x2', 'T', 'W', '\x3', 
		'\x2', '\x2', '\x2', 'U', 'S', '\x3', '\x2', '\x2', '\x2', 'U', 'V', '\x3', 
		'\x2', '\x2', '\x2', 'V', 'X', '\x3', '\x2', '\x2', '\x2', 'W', 'U', '\x3', 
		'\x2', '\x2', '\x2', 'X', '\\', '\a', '@', '\x2', '\x2', 'Y', '[', '\n', 
		'\x4', '\x2', '\x2', 'Z', 'Y', '\x3', '\x2', '\x2', '\x2', '[', '^', '\x3', 
		'\x2', '\x2', '\x2', '\\', 'Z', '\x3', '\x2', '\x2', '\x2', '\\', ']', 
		'\x3', '\x2', '\x2', '\x2', ']', '_', '\x3', '\x2', '\x2', '\x2', '^', 
		'\\', '\x3', '\x2', '\x2', '\x2', '_', '`', '\x6', '\b', '\x3', '\x2', 
		'`', '\x11', '\x3', '\x2', '\x2', '\x2', '\x61', '\x63', '\x5', '\x4', 
		'\x2', '\x2', '\x62', '\x61', '\x3', '\x2', '\x2', '\x2', '\x63', '\x66', 
		'\x3', '\x2', '\x2', '\x2', '\x64', '\x62', '\x3', '\x2', '\x2', '\x2', 
		'\x64', '\x65', '\x3', '\x2', '\x2', '\x2', '\x65', 'g', '\x3', '\x2', 
		'\x2', '\x2', '\x66', '\x64', '\x3', '\x2', '\x2', '\x2', 'g', 'k', '\a', 
		']', '\x2', '\x2', 'h', 'j', '\n', '\x5', '\x2', '\x2', 'i', 'h', '\x3', 
		'\x2', '\x2', '\x2', 'j', 'm', '\x3', '\x2', '\x2', '\x2', 'k', 'l', '\x3', 
		'\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 'l', 'n', '\x3', 
		'\x2', '\x2', '\x2', 'm', 'k', '\x3', '\x2', '\x2', '\x2', 'n', 'o', '\a', 
		'_', '\x2', '\x2', 'o', 's', '\a', '*', '\x2', '\x2', 'p', 'r', '\n', 
		'\x6', '\x2', '\x2', 'q', 'p', '\x3', '\x2', '\x2', '\x2', 'r', 'u', '\x3', 
		'\x2', '\x2', '\x2', 's', 't', '\x3', '\x2', '\x2', '\x2', 's', 'q', '\x3', 
		'\x2', '\x2', '\x2', 't', 'v', '\x3', '\x2', '\x2', '\x2', 'u', 's', '\x3', 
		'\x2', '\x2', '\x2', 'v', 'z', '\a', '+', '\x2', '\x2', 'w', 'y', '\x5', 
		'\x4', '\x2', '\x2', 'x', 'w', '\x3', '\x2', '\x2', '\x2', 'y', '|', '\x3', 
		'\x2', '\x2', '\x2', 'z', 'x', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\x3', 
		'\x2', '\x2', '\x2', '{', '\x8D', '\x3', '\x2', '\x2', '\x2', '|', 'z', 
		'\x3', '\x2', '\x2', '\x2', '}', '~', '\a', '\x63', '\x2', '\x2', '~', 
		'\x7F', '\a', 'u', '\x2', '\x2', '\x7F', '\x83', '\x3', '\x2', '\x2', 
		'\x2', '\x80', '\x82', '\x5', '\x4', '\x2', '\x2', '\x81', '\x80', '\x3', 
		'\x2', '\x2', '\x2', '\x82', '\x85', '\x3', '\x2', '\x2', '\x2', '\x83', 
		'\x81', '\x3', '\x2', '\x2', '\x2', '\x83', '\x84', '\x3', '\x2', '\x2', 
		'\x2', '\x84', '\x86', '\x3', '\x2', '\x2', '\x2', '\x85', '\x83', '\x3', 
		'\x2', '\x2', '\x2', '\x86', '\x8A', '\x5', '\n', '\x5', '\x2', '\x87', 
		'\x89', '\x5', '\x4', '\x2', '\x2', '\x88', '\x87', '\x3', '\x2', '\x2', 
		'\x2', '\x89', '\x8C', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x88', '\x3', 
		'\x2', '\x2', '\x2', '\x8A', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x8B', 
		'\x8E', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x8A', '\x3', '\x2', '\x2', 
		'\x2', '\x8D', '}', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', '\x3', 
		'\x2', '\x2', '\x2', '\x8E', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x8F', 
		'\x90', '\x6', '\t', '\x4', '\x2', '\x90', '\x13', '\x3', '\x2', '\x2', 
		'\x2', '\x91', '\x93', '\x5', '\x4', '\x2', '\x2', '\x92', '\x91', '\x3', 
		'\x2', '\x2', '\x2', '\x93', '\x96', '\x3', '\x2', '\x2', '\x2', '\x94', 
		'\x92', '\x3', '\x2', '\x2', '\x2', '\x94', '\x95', '\x3', '\x2', '\x2', 
		'\x2', '\x95', '\x97', '\x3', '\x2', '\x2', '\x2', '\x96', '\x94', '\x3', 
		'\x2', '\x2', '\x2', '\x97', '\x9B', '\a', '%', '\x2', '\x2', '\x98', 
		'\x9A', '\n', '\x4', '\x2', '\x2', '\x99', '\x98', '\x3', '\x2', '\x2', 
		'\x2', '\x9A', '\x9D', '\x3', '\x2', '\x2', '\x2', '\x9B', '\x99', '\x3', 
		'\x2', '\x2', '\x2', '\x9B', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x9C', 
		'\x9E', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9B', '\x3', '\x2', '\x2', 
		'\x2', '\x9E', '\x9F', '\x6', '\n', '\x5', '\x2', '\x9F', '\xA0', '\b', 
		'\n', '\x2', '\x2', '\xA0', '\x15', '\x3', '\x2', '\x2', '\x2', '\xA1', 
		'\xA3', '\x5', '\x4', '\x2', '\x2', '\xA2', '\xA1', '\x3', '\x2', '\x2', 
		'\x2', '\xA3', '\xA6', '\x3', '\x2', '\x2', '\x2', '\xA4', '\xA2', '\x3', 
		'\x2', '\x2', '\x2', '\xA4', '\xA5', '\x3', '\x2', '\x2', '\x2', '\xA5', 
		'\xA7', '\x3', '\x2', '\x2', '\x2', '\xA6', '\xA4', '\x3', '\x2', '\x2', 
		'\x2', '\xA7', '\xAB', '\a', '/', '\x2', '\x2', '\xA8', '\xAA', '\x5', 
		'\x4', '\x2', '\x2', '\xA9', '\xA8', '\x3', '\x2', '\x2', '\x2', '\xAA', 
		'\xAD', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xA9', '\x3', '\x2', '\x2', 
		'\x2', '\xAB', '\xAC', '\x3', '\x2', '\x2', '\x2', '\xAC', '\xAE', '\x3', 
		'\x2', '\x2', '\x2', '\xAD', '\xAB', '\x3', '\x2', '\x2', '\x2', '\xAE', 
		'\xAF', '\a', '\x62', '\x2', '\x2', '\xAF', '\xB0', '\a', '\x62', '\x2', 
		'\x2', '\xB0', '\xB1', '\a', '\x62', '\x2', '\x2', '\xB1', '\xB5', '\x3', 
		'\x2', '\x2', '\x2', '\xB2', '\xB4', '\n', '\x4', '\x2', '\x2', '\xB3', 
		'\xB2', '\x3', '\x2', '\x2', '\x2', '\xB4', '\xB7', '\x3', '\x2', '\x2', 
		'\x2', '\xB5', '\xB3', '\x3', '\x2', '\x2', '\x2', '\xB5', '\xB6', '\x3', 
		'\x2', '\x2', '\x2', '\xB6', '\xB8', '\x3', '\x2', '\x2', '\x2', '\xB7', 
		'\xB5', '\x3', '\x2', '\x2', '\x2', '\xB8', '\xB9', '\a', '\x62', '\x2', 
		'\x2', '\xB9', '\xBA', '\a', '\x62', '\x2', '\x2', '\xBA', '\xBB', '\a', 
		'\x62', '\x2', '\x2', '\xBB', '\xBF', '\x3', '\x2', '\x2', '\x2', '\xBC', 
		'\xBE', '\x5', '\x4', '\x2', '\x2', '\xBD', '\xBC', '\x3', '\x2', '\x2', 
		'\x2', '\xBE', '\xC1', '\x3', '\x2', '\x2', '\x2', '\xBF', '\xBD', '\x3', 
		'\x2', '\x2', '\x2', '\xBF', '\xC0', '\x3', '\x2', '\x2', '\x2', '\xC0', 
		'\xC2', '\x3', '\x2', '\x2', '\x2', '\xC1', '\xBF', '\x3', '\x2', '\x2', 
		'\x2', '\xC2', '\xC3', '\x6', '\v', '\x6', '\x2', '\xC3', '\x17', '\x3', 
		'\x2', '\x2', '\x2', '\xC4', '\xC6', '\x5', '\x4', '\x2', '\x2', '\xC5', 
		'\xC4', '\x3', '\x2', '\x2', '\x2', '\xC6', '\xC9', '\x3', '\x2', '\x2', 
		'\x2', '\xC7', '\xC5', '\x3', '\x2', '\x2', '\x2', '\xC7', '\xC8', '\x3', 
		'\x2', '\x2', '\x2', '\xC8', '\xCA', '\x3', '\x2', '\x2', '\x2', '\xC9', 
		'\xC7', '\x3', '\x2', '\x2', '\x2', '\xCA', '\xCE', '\a', '/', '\x2', 
		'\x2', '\xCB', '\xCD', '\x5', '\x4', '\x2', '\x2', '\xCC', '\xCB', '\x3', 
		'\x2', '\x2', '\x2', '\xCD', '\xD0', '\x3', '\x2', '\x2', '\x2', '\xCE', 
		'\xCC', '\x3', '\x2', '\x2', '\x2', '\xCE', '\xCF', '\x3', '\x2', '\x2', 
		'\x2', '\xCF', '\xD1', '\x3', '\x2', '\x2', '\x2', '\xD0', '\xCE', '\x3', 
		'\x2', '\x2', '\x2', '\xD1', '\xD2', '\a', '\x62', '\x2', '\x2', '\xD2', 
		'\xD3', '\a', '\x62', '\x2', '\x2', '\xD3', '\xD4', '\a', '\x62', '\x2', 
		'\x2', '\xD4', '\xD8', '\x3', '\x2', '\x2', '\x2', '\xD5', '\xD7', '\n', 
		'\x4', '\x2', '\x2', '\xD6', '\xD5', '\x3', '\x2', '\x2', '\x2', '\xD7', 
		'\xDA', '\x3', '\x2', '\x2', '\x2', '\xD8', '\xD6', '\x3', '\x2', '\x2', 
		'\x2', '\xD8', '\xD9', '\x3', '\x2', '\x2', '\x2', '\xD9', '\xDB', '\x3', 
		'\x2', '\x2', '\x2', '\xDA', '\xD8', '\x3', '\x2', '\x2', '\x2', '\xDB', 
		'\xDC', '\x6', '\f', '\a', '\x2', '\xDC', '\xDD', '\x3', '\x2', '\x2', 
		'\x2', '\xDD', '\xDE', '\b', '\f', '\x3', '\x2', '\xDE', '\x19', '\x3', 
		'\x2', '\x2', '\x2', '\xDF', '\xE1', '\n', '\x4', '\x2', '\x2', '\xE0', 
		'\xDF', '\x3', '\x2', '\x2', '\x2', '\xE1', '\xE2', '\x3', '\x2', '\x2', 
		'\x2', '\xE2', '\xE0', '\x3', '\x2', '\x2', '\x2', '\xE2', '\xE3', '\x3', 
		'\x2', '\x2', '\x2', '\xE3', '\xE4', '\x3', '\x2', '\x2', '\x2', '\xE4', 
		'\xE5', '\x6', '\r', '\b', '\x2', '\xE5', '\x1B', '\x3', '\x2', '\x2', 
		'\x2', '\xE6', '\xE8', '\n', '\x4', '\x2', '\x2', '\xE7', '\xE6', '\x3', 
		'\x2', '\x2', '\x2', '\xE8', '\xE9', '\x3', '\x2', '\x2', '\x2', '\xE9', 
		'\xE7', '\x3', '\x2', '\x2', '\x2', '\xE9', '\xEA', '\x3', '\x2', '\x2', 
		'\x2', '\xEA', '\xEB', '\x3', '\x2', '\x2', '\x2', '\xEB', '\xEC', '\x6', 
		'\xE', '\t', '\x2', '\xEC', '\x1D', '\x3', '\x2', '\x2', '\x2', '\xED', 
		'\xEE', '\a', '\x62', '\x2', '\x2', '\xEE', '\xEF', '\a', '\x62', '\x2', 
		'\x2', '\xEF', '\xF0', '\a', '\x62', '\x2', '\x2', '\xF0', '\xF1', '\x3', 
		'\x2', '\x2', '\x2', '\xF1', '\xF2', '\b', '\xF', '\x4', '\x2', '\xF2', 
		'\x1F', '\x3', '\x2', '\x2', '\x2', '\xF3', '\xF5', '\a', '^', '\x2', 
		'\x2', '\xF4', '\xF6', '\n', '\x4', '\x2', '\x2', '\xF5', '\xF4', '\x3', 
		'\x2', '\x2', '\x2', '\xF5', '\xF6', '\x3', '\x2', '\x2', '\x2', '\xF6', 
		'!', '\x3', '\x2', '\x2', '\x2', '\xF7', '\xF9', '\v', '\x2', '\x2', '\x2', 
		'\xF8', '\xF7', '\x3', '\x2', '\x2', '\x2', '\xF9', '\xFA', '\x3', '\x2', 
		'\x2', '\x2', '\xFA', '\xFB', '\x3', '\x2', '\x2', '\x2', '\xFA', '\xF8', 
		'\x3', '\x2', '\x2', '\x2', '\xFB', '#', '\x3', '\x2', '\x2', '\x2', '!', 
		'\x2', '\x3', ',', '\x31', '\x33', '\x37', '>', '\x45', 'N', 'U', '\\', 
		'\x64', 'k', 's', 'z', '\x83', '\x8A', '\x8D', '\x94', '\x9B', '\xA4', 
		'\xAB', '\xB5', '\xBF', '\xC7', '\xCE', '\xD8', '\xE2', '\xE9', '\xF5', 
		'\xFA', '\x5', '\x3', '\n', '\x2', '\a', '\x3', '\x2', '\x6', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
